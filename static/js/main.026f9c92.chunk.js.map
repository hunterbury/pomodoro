{"version":3,"sources":["App.js","index.js"],"names":["library","add","faPlus","faMinus","faSync","faPause","faPlay","App","props","state","breakCount","sessionCount","clockCount","currentTimer","isPlaying","handlePlayPause","clearInterval","loop","setState","setInterval","document","getElementById","play","handleReset","currentTime","pause","convertToTime","count","minutes","Math","floor","seconds","handleLengthChange","timerType","newCount","toLowerCase","undefined","this","breakProps","title","handleDecrease","handleIncrease","sessionProps","className","id","src","type","onClick","icon","React","Component","SetTimer","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.026f9c92.chunk.js","sourcesContent":["import './App.css';\nimport React from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { library } from '@fortawesome/fontawesome-svg-core'\nimport { faPlus, faMinus, faSync, faPause, faPlay } from '@fortawesome/free-solid-svg-icons'\n\nlibrary.add(faPlus, faMinus, faSync, faPause, faPlay);\n\nclass App extends React.Component {\n    state = {\n    breakCount: 5,\n    sessionCount: 25,\n    clockCount: 25 * 60,\n    currentTimer: 'Session',\n    isPlaying: false\n  }\n  constructor(props) {\n    super(props);\n    this.loop = undefined;\n  }\n  \n  componentWillUnmount() {\n   clearInterval(this.loop);\n  }\n  \n  handlePlayPause = () => {\n    const { isPlaying } = this.state;\n    if(isPlaying) {\n      clearInterval(this.loop);\n      this.setState({\n        isPlaying: false\n      });\n    } else {\n      this.setState({\n        isPlaying: true\n      });\n      this.loop = setInterval (() => {\n        const { clockCount, currentTimer, breakCount, sessionCount } = this.state;\n        \n        if(clockCount === 0) {\n          this.setState({\n            currentTimer: currentTimer === 'Session' ? 'Break' : 'Session',\n            clockCount: (currentTimer === 'Session') ? (breakCount * 60) : (sessionCount * 60)\n          });\n          \n          document.getElementById(\"beep\").play();\n        } else {       \n          this.setState({\n           clockCount: clockCount - 1\n        })\n        }\n      }, 1000);\n    }\n  }\n  \n  handleReset = () => {\n    this.setState({\n      breakCount: 5,\n      sessionCount: 25,\n      clockCount: 25 * 60,\n      currentTimer: 'Session',\n      isPlaying: false,\n    });\n    \n    clearInterval(this.loop);\n    \n    document.getElementById(\"beep\").currentTime = 0;\n    document.getElementById(\"beep\").pause();\n  }\n  \n  convertToTime = (count) => {\n    let minutes = Math.floor(count / 60);\n    let seconds = count % 60;\n    minutes = minutes < 10 ? ('0'+minutes) : minutes;\n    seconds = seconds < 10 ? ('0'+seconds) : seconds;\n    return `${minutes}:${seconds}`;\n  }\n  \n  handleLengthChange = (count, timerType) => {\n    const { \n      sessionCount, \n      breakCount, \n      isPlaying, \n      currentTimer\n    } = this.state;\n    \n    let newCount;\n    \n    if(timerType === 'session') {\n      newCount = sessionCount + count;\n    } else {\n      newCount = breakCount + count;\n    }\n    \n    if(newCount > 0 && newCount < 61 && !isPlaying) {\n      this.setState({\n        [`${timerType}Count`]: newCount\n      });\n      \n      if(currentTimer.toLowerCase() === timerType) {\n        this.setState({\n          clockCount: newCount * 60\n        })\n      }\n    }\n  }\n  \n  render() {\n    const {\n      breakCount,\n      sessionCount,\n      clockCount,\n      currentTimer,\n      isPlaying\n    } = this.state;\n    \n    const breakProps = {\n      title: 'Break',\n      count: breakCount,\n      handleDecrease: () => this.handleLengthChange(-1, 'break'),\n      handleIncrease: () => this.handleLengthChange(1, 'break')\n    }\n    \n    const sessionProps = {\n      title: 'Session',\n      count: sessionCount,\n      handleDecrease: () => this.handleLengthChange(-1, 'session'),\n      handleIncrease: () => this.handleLengthChange(1, 'session'),\n    }\n    \n    return  (\n      <div>\n        <div className=\"title\">\n          <h1>Pomodoro Clock</h1>\n        </div> <br /> <br />\n       <div className=\"flex\">\n        <SetTimer  {...breakProps} />\n        <SetTimer {...sessionProps} />\n       </div>\n       <div className=\"clock-container\">\n         <h1 id=\"timer-label\">{currentTimer}</h1>\n         <span id=\"time-left\">{this.convertToTime(clockCount)}</span>\n         <audio id=\"beep\" src=\"https://www.pacdv.com/sounds/interface_sound_effects/sound10.mp3\" type=\"audio/mp3\" />\n         <div className=\"flex\">\n          <button id=\"start_stop\" onClick={this.handlePlayPause}>\n            <FontAwesomeIcon icon={`${isPlaying ? 'pause' : 'play'}`} />\n          </button>\n          <button id=\"reset\" onClick={this.handleReset}>\n            <FontAwesomeIcon icon=\"sync\" />         \n          </button>         \n         </div>\n       </div>\n     </div>\n    );\n  }\n}\n\nconst SetTimer = (props) => {\n  const id = props.title.toLowerCase();\n  return (\n    <div className=\"timer-container\">\n      <h2 id={`${id}-label`}>{props.title} Length</h2>\n      <div className=\"flex actions-wrapper\">\n        <button id={`${id}-decrement`} onClick={props.handleDecrease}>\n        <FontAwesomeIcon icon=\"minus\" />        \n        </button>\n        <span id={`${id}-length`}>{props.count}</span>\n        <button id={`${id}-increment`} onClick={props.handleIncrease}>\n          <FontAwesomeIcon icon=\"plus\" />        \n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport 'font-awesome/css/font-awesome.min.css';\n\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}